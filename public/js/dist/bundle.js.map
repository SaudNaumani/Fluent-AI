{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/typed.js/lib/typed.js","webpack:///./public/js/components/banner.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","root","factory","this","id","loaded","_createClass","defineProperties","target","props","length","descriptor","configurable","writable","Constructor","protoProps","staticProps","_initializerJs","_htmlParserJs","Typed","elementId","options","instance","TypeError","_classCallCheck","initializer","load","begin","pause","status","start","stop","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onStart","reset","onDestroy","restart","arguments","undefined","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","strPos","curLoop","insertCursor","onReset","_this","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","setTimeout","currentElContent","strings","sequence","startDelay","_this2","fadeOut","el","classList","contains","fadeOutClass","remove","humanize","humanizer","typeSpeed","numChars","htmlParser","typeHtmlChars","pauseTime","substr","charAt","test","skip","exec","parseInt","temporaryPause","onTypingPaused","substring","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","onTypingResumed","setPauseStatus","preStringTyped","nextString","_this3","onStringTyped","complete","loop","loopCount","backDelay","_this4","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","onComplete","isTyping","isBlinking","cursorBlinking","add","speed","Math","round","random","shuffle","sort","_this5","className","fadeOutDelay","str","attr","setAttribute","isInput","contentType","innerHTML","textContent","_this6","addEventListener","e","showCursor","document","createElement","cursorChar","insertBefore","nextSibling","_extends","assign","source","_defaultsJs2","obj","default","_interopRequireDefault","Initializer","self","querySelector","tagName","toLowerCase","elContent","getAttribute","isPaused","map","trim","stringsElement","style","display","Array","slice","apply","children","stringsLength","stringEl","push","getCurrentElContent","autoInsertCss","appendAnimationCss","css","type","innerCss","body","appendChild","defaults","Infinity","HTMLParser","curChar","endTag","a"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.9\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos === curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing all strings\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      var cssDataName = 'data-typed-js-css';\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor && !self.fadeOut) {\n\t        return;\n\t      }\n\t      if (document.querySelector('[' + cssDataName + ']')) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      css.setAttribute(cssDataName, true);\n\t\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;","import Typed from 'typed.js';\n\nfunction loadDynamicBannerText() {\n  new Typed('#banner-typed-text', {\n    strings: [\"Speak The Language\", \"Get Instant Feedback\", \"Become Fluent\"],\n    typeSpeed: 100,\n    loop: true\n  });\n}\n\nexport { loadDynamicBannerText };\n"],"sourceRoot":""}